# The following are required helpers in this first version, they may not be needed long term.
# These are typically added to your configuration.yaml, although there are a few different ways to do it for those more experienced.
# Find and replace Kidname and kidname (case sensitive) in the helpers below then add them to your configuration.  You will need to duplicate the input_select for each kid as well as the action in the automation.
# Note there are 3 different examples for the different number of kids.  Only select the single scenario that fits your needs.  In the scenarios with multiple kids, you would need to replace kidname1 kidname2, etc

##########################################################################
###################### Example 1 for single kid ##########################
input_datetime:
  kc_ui_set_date_helper:
    name: Set Chore Date
    has_date: true
    has_time: true

input_select:
  kc_kidname_chore_list:
    name: Kidname's Chore List
    options:
      - "None"

automation:
  - alias: "Update KidsChore UI Helpers"
    triggers:
      - trigger: homeassistant
        event: start
      - trigger: time_pattern
        minutes: "/5"
    action:
      - action: input_select.set_options
        data:
          entity_id: input_select.kc_kidname_chore_list
          options: >
            {% set chore_names = states.sensor 
              | selectattr('entity_id', 'search', 'sensor.kc_kidname_chore_status') 
              | selectattr('attributes.friendly_name', 'defined') 
              | map(attribute='attributes.friendly_name') 
              | list %}
            {% set chore_names = chore_names | map('regex_replace', '^.* - ', '') | list %}
            {{ ['None'] + chore_names if chore_names else ['None', 'No Chores Found'] }}

      - action: input_datetime.set_datetime
        target:
          entity_id: input_datetime.kc_ui_set_date_helper
        data:
          datetime: "{{ (now().replace(hour=23, minute=0, second=0, microsecond=0) + timedelta(days=1)).isoformat() }}"

########################################################################
###################### Example 2 for two kids ##########################
input_datetime:
  kc_ui_set_date_helper:
    name: Set Chore Date
    has_date: true
    has_time: true

input_select:
  kc_kidname1_chore_list:
    name: Kidname1's Chore List
    options:
      - "None"
  kc_kidname2_chore_list:
    name: Kidname2's Chore List
    options:
      - "None"

automation:
  - alias: "Update KidsChore UI Helpers"
    triggers:
      - trigger: homeassistant
        event: start
      - trigger: time_pattern
        minutes: "/5"
    action:
      - action: input_select.set_options
        data:
          entity_id: input_select.kc_kidname1_chore_list
          options: >
            {% set chore_names = states.sensor 
              | selectattr('entity_id', 'search', 'sensor.kc_kidname1_chore_status') 
              | selectattr('attributes.friendly_name', 'defined') 
              | map(attribute='attributes.friendly_name') 
              | list %}
            {% set chore_names = chore_names | map('regex_replace', '^.* - ', '') | list %}
            {{ ['None'] + chore_names if chore_names else ['None', 'No Chores Found'] }}
      - action: input_select.set_options
        data:
          entity_id: input_select.kc_kidname2_chore_list
          options: >
            {% set chore_names = states.sensor 
              | selectattr('entity_id', 'search', 'sensor.kc_kidname2_chore_status') 
              | selectattr('attributes.friendly_name', 'defined') 
              | map(attribute='attributes.friendly_name') 
              | list %}
            {% set chore_names = chore_names | map('regex_replace', '^.* - ', '') | list %}
            {{ ['None'] + chore_names if chore_names else ['None', 'No Chores Found'] }}

      - action: input_datetime.set_datetime
        target:
          entity_id: input_datetime.kc_ui_set_date_helper
        data:
          datetime: "{{ (now().replace(hour=23, minute=0, second=0, microsecond=0) + timedelta(days=1)).isoformat() }}"

##########################################################################
###################### Example 3 for three kids ##########################
input_datetime:
  kc_ui_set_date_helper:
    name: Set Chore Date
    has_date: true
    has_time: true

input_select:
  kc_kidname1_chore_list:
    name: Kidname1's Chore List
    options:
      - "None"
  kc_kidname2_chore_list:
    name: Kidname2's Chore List
    options:
      - "None"
  kc_kidname3_chore_list:
    name: Kidname3's Chore List
    options:
      - "None"

automation:
  - alias: "Update KidsChore UI Helpers"
    triggers:
      - trigger: homeassistant
        event: start
      - trigger: time_pattern
        minutes: "/5"
    action:
      - action: input_select.set_options
        data:
          entity_id: input_select.kc_kidname1_chore_list
          options: >
            {% set chore_names = states.sensor 
              | selectattr('entity_id', 'search', 'sensor.kc_kidname1_chore_status') 
              | selectattr('attributes.friendly_name', 'defined') 
              | map(attribute='attributes.friendly_name') 
              | list %}
            {% set chore_names = chore_names | map('regex_replace', '^.* - ', '') | list %}
            {{ ['None'] + chore_names if chore_names else ['None', 'No Chores Found'] }}
      - action: input_select.set_options
        data:
          entity_id: input_select.kc_kidname2_chore_list
          options: >
            {% set chore_names = states.sensor 
              | selectattr('entity_id', 'search', 'sensor.kc_kidname2_chore_status') 
              | selectattr('attributes.friendly_name', 'defined') 
              | map(attribute='attributes.friendly_name') 
              | list %}
            {% set chore_names = chore_names | map('regex_replace', '^.* - ', '') | list %}
            {{ ['None'] + chore_names if chore_names else ['None', 'No Chores Found'] }}
      - action: input_select.set_options
        data:
          entity_id: input_select.kc_kidname3_chore_list
          options: >
            {% set chore_names = states.sensor 
              | selectattr('entity_id', 'search', 'sensor.kc_kidname3_chore_status') 
              | selectattr('attributes.friendly_name', 'defined') 
              | map(attribute='attributes.friendly_name') 
              | list %}
            {% set chore_names = chore_names | map('regex_replace', '^.* - ', '') | list %}
            {{ ['None'] + chore_names if chore_names else ['None', 'No Chores Found'] }}  

      - action: input_datetime.set_datetime
        target:
          entity_id: input_datetime.kc_ui_set_date_helper
        data:
          datetime: "{{ (now().replace(hour=23, minute=0, second=0, microsecond=0) + timedelta(days=1)).isoformat() }}"
